on:
  workflow_dispatch:

name: Manual Publish to crates.io

permissions:
  contents: write
  pull-requests: read
  actions: write

jobs:
  test-and-lint:
    uses: ./.github/workflows/test-and-lint.yml

  publish:
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Get current version
        id: get_version
        run: |
          CURRENT_VERSION=$(grep "^version = " Cargo.toml | cut -d'"' -f2)
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Create GitHub Release
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"

          # Configure git user
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

          # Create tag
          git tag -a "$VERSION" -m "$VERSION"
          git push origin "$VERSION"

          # Generate release notes from PR titles only
          RELEASE_NOTES=""
          while IFS= read -r line; do
            if [[ $line =~ ^-\ Merge\ pull\ request\ #([0-9]+) ]]; then
              PR_NUMBER="${BASH_REMATCH[1]}"
              PR_TITLE=$(gh pr view "$PR_NUMBER" --json title --jq '.title' 2>/dev/null || echo "PR #$PR_NUMBER")
              RELEASE_NOTES+="- $PR_TITLE #$PR_NUMBER"$'\n'
            fi
          done <<< "$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo HEAD^)..HEAD)"

          # Create release using GitHub CLI
          gh release create "$VERSION" \
            --title "$VERSION" \
            --notes "$RELEASE_NOTES" \
            --draft=false \
            --prerelease=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to crates.io
        run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
