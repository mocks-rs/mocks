name: Manual Publish to crates.io

on:
  workflow_dispatch:
    inputs:
      create_tag:
        description: 'Create Git tag for current version'
        required: false
        default: true
        type: boolean
      dry_run:
        description: 'Dry run (do not actually publish)'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: read

jobs:
  test-and-lint:
    uses: ./.github/workflows/test-and-lint.yml

  publish:
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          components: ''

      - name: Get current version
        id: get_version
        run: |
          CURRENT_VERSION=$(grep "^version = " Cargo.toml | cut -d'"' -f2)
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Check if tag exists
        id: check_tag
        run: |
          TAG="v${{ steps.get_version.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "Tag $TAG already exists"
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            echo "Tag $TAG does not exist"
          fi

      - name: Create Git tag
        if: github.event.inputs.create_tag == 'true' && steps.check_tag.outputs.tag_exists == 'false'
        run: |
          TAG="v${{ steps.get_version.outputs.version }}"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: github.event.inputs.create_tag == 'true' && steps.check_tag.outputs.tag_exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: v${{ steps.get_version.outputs.version }}
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Dry run publish
        if: github.event.inputs.dry_run == 'true'
        run: |
          echo "Dry run mode - would publish version ${{ steps.get_version.outputs.version }}"
          cargo publish --dry-run

      - name: Publish to crates.io
        if: github.event.inputs.dry_run == 'false'
        run: cargo publish --token ${{ secrets.CRATES_TOKEN }}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
