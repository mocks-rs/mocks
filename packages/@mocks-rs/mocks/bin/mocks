#!/usr/bin/env node

const { platform, arch, env } = process;
const { spawnSync } = require("child_process");
const { resolve } = require("path");

const PLATFORMS = {
  win32: {
    x64: "@mocks-rs/mocks-win32-x64/mocks.exe",
    arm64: "@mocks-rs/mocks-win32-arm64/mocks.exe",
  },
  darwin: {
    x64: "@mocks-rs/mocks-darwin-x64/mocks",
    arm64: "@mocks-rs/mocks-darwin-arm64/mocks",
  },
  linux: {
    x64: "@mocks-rs/mocks-linux-x64/mocks",
    arm64: "@mocks-rs/mocks-linux-arm64/mocks",
  },
};

function getBinaryPath() {
  // Allow manual override via environment variable
  if (env.MOCKS_BINARY) {
    return env.MOCKS_BINARY;
  }

  // Get platform-specific binary path
  const platformBinaries = PLATFORMS[platform];
  if (!platformBinaries) {
    return null;
  }

  const binaryPath = platformBinaries[arch];
  if (!binaryPath) {
    return null;
  }

  return binaryPath;
}

function main() {
  const binaryPath = getBinaryPath();
  
  if (!binaryPath) {
    console.error(`Unsupported platform: ${platform}-${arch}`);
    console.error('');
    console.error('Supported platforms:');
    for (const [plt, archs] of Object.entries(PLATFORMS)) {
      for (const archName of Object.keys(archs)) {
        console.error(`  ${plt}-${archName}`);
      }
    }
    console.error('');
    console.error('You can manually specify a binary path with the MOCKS_BINARY environment variable.');
    process.exit(1);
  }

  let resolvedBinaryPath;
  try {
    resolvedBinaryPath = require.resolve(binaryPath);
  } catch (error) {
    console.error(`Failed to find binary for ${platform}-${arch}`);
    console.error('');
    console.error('This usually means the platform-specific package is not installed.');
    console.error('Try running: npm install --force');
    console.error('');
    console.error(`If the problem persists, please report an issue at:`);
    console.error('https://github.com/mocks-rs/mocks/issues');
    process.exit(1);
  }

  const result = spawnSync(resolvedBinaryPath, process.argv.slice(2), {
    stdio: "inherit",
    windowsHide: false,
  });

  if (result.error) {
    console.error('Failed to execute mocks binary:', result.error.message);
    process.exit(1);
  }

  process.exit(result.status || 0);
}

main();
